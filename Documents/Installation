
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 sudo apt-get install ros-kinetic-moveit
    source /opt/ros/kinetic/setup.bash
    roslaunch moveit_package demo.launch
    catkin_make
    pyuic5 -x robot.ui -o gui.py
    
    # Installing and configuring moveit
    sudo apt-get install ros-kinetic-moveit

    source /opt/ros/kinetic/setup.bash

    roslaunch moveit_setup_assistant setup_assistant.launch
    ~/catkin_ws/devel/setup.bash
    source devel/setup.bash 

    roslaunch moveit_package demo.launch

    git clone https://github.com/gt-ros-pkg/hrl-kdl.git
 

//++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Store history of terminal in a text file 
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 history  > print.txt
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Running April tags 


	cd catkin_ws/
  773  . ~/catkin_ws/devel/setup.bash
  774  rosrun image_view image_view image:=/tag_detections_image
  775  catkin_make
  776  source devel/setup.bash 
  777  roslaunch apriltags_ros chandan.launch 


Launch file 

* working*

//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
<launch>
  <node name="usb_cam" pkg="usb_cam" type="usb_cam_node" output="screen" >
    <param name="video_device" value="/dev/video0" />
 	<param name="camera_info_url" value="package://usb_cam/camera_info/head_camera.yaml"/>
   
<param name="image_width" value="640" />
<param name="image_height" value="480" />
<param name="pixel_format" value="mjpeg" /> 

    <param name="camera_frame_id" value="usb_cam" />
    <param name="io_method" value="mmap"/>
  </node>
  <node name="image_view" pkg="image_view" type="image_view" respawn="false" output="screen">
    <remap from="image" to="/usb_cam/image_raw"/>
    <param name="autosize" value="true" />
<param name="image_transport" type="str" value="compressed" />
  </node>


  
<node pkg="apriltags_ros" type="apriltag_detector_node" name="apriltag_detector" output="screen">
    <!-- Remap topic required by the node to custom topics -->
    
   <remap from="image_rect" to="usb_cam/image_raw" />
    <remap from="camera_info" to="usb_cam/camera_info" />

    <!-- Optional: Subscribe to the compressed stream-->
    <param name="image_transport" type="str" value="compressed" />

    <!-- Select the tag family: 16h5, 25h7, 25h9, 36h9, or 36h11(default) -->
    <param name="tag_family" type="str" value="36h11" />

    <!-- Enable projected optical measurements for more accurate tag transformations -->
    <!-- This exists for backwards compatability and should be left true for new setups -->
    
    <param name="projected_optics" type="bool" value="true" />

    <!-- Describe the tags -->
    <rosparam param="tag_descriptions">[
      {id: 0, size: 0.163513},
      {id: 1, size: 0.163513, frame_id: a_frame},
      {id: 2, size: 0.163513, frame_id: tag_2},
      {id: 3, size: 0.163513},
      {id: 4, size: 0.163513},
      {id: 5, size: 0.163513}

]
    </rosparam>
  </node>
</launch>

//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

USB test cam launch file

<launch>
  <node name="usb_cam" pkg="usb_cam" type="usb_cam_node" output="screen" >
    <param name="video_device" value="/dev/video0" />
    <param name="camera_info_url" value="package://usb_cam/camera_info/head_camera.yaml"/>
    <param name="image_width" value="640" />
    <param name="image_height" value="480" />
    <param name="pixel_format" value="yuyv" />
    <param name="camera_frame_id" value="usb_cam" />
    <param name="io_method" value="mmap"/>
  </node>
</launch>

//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

we need to place the follwing code in side a folder camera_info name the files as head_camera.yaml
This is the camera calibration file (Required by ROS) 
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

image_width: 640
image_height: 480
camera_name: head_camera
camera_matrix:
  rows: 3
  cols: 3
  data: [549.0240160929617, 0, 312.795684435349, 0, 550.5389398832353, 222.6201104796983, 0, 0, 1]
distortion_model: plumb_bob
distortion_coefficients:
  rows: 1
  cols: 5
  data: [-0.1038489789349319, 0.1511745286619518, -0.006449007584102891, 0.0007314767956369666, 0]
rectification_matrix:
  rows: 3
  cols: 3
  data: [1, 0, 0, 0, 1, 0, 0, 0, 1]
projection_matrix:
  rows: 3
  cols: 4
  data: [543.5773315429688, 0, 313.0025202958532, 0, 0, 543.2941284179688, 219.3712132622622, 0, 0, 0, 1, 0]

//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


